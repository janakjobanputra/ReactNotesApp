{"ast":null,"code":"import _regeneratorRuntime from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/newfolder.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './form.css';\n\nvar NewFolderPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewFolderPage, _React$Component);\n\n  function NewFolderPage(props) {\n    var _this;\n\n    _classCallCheck(this, NewFolderPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewFolderPage).call(this, props));\n\n    _this.updateValue = function (e) {\n      var folder = _this.state.folder;\n\n      _this.setState({\n        folder: _objectSpread({}, folder, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleSave =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return _this.props.onSave(_this.state.folder);\n\n              case 3:\n                id = _context.sent;\n\n                _this.props.history.replace(\"/folders/\".concat(id));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      folder: {\n        title: '',\n        notes: [],\n        createdAt: undefined,\n        updatedAt: undefined\n      },\n      saving: false\n    };\n    return _this;\n  }\n\n  _createClass(NewFolderPage, [{\n    key: \"render\",\n    value: function render() {\n      var folder = this.state.folder;\n      return React.createElement(\"div\", {\n        className: \"note-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"New Folder\"), React.createElement(\"form\", {\n        onSubmit: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"note-form-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Folder Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: folder.title,\n        onChange: this.updateValue,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"note-form-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return NewFolderPage;\n}(React.Component);\n\nexport { NewFolderPage as default };","map":{"version":3,"sources":["/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/newfolder.js"],"names":["React","Link","NewFolderPage","props","updateValue","e","folder","state","setState","target","name","value","handleSave","preventDefault","onSave","id","history","replace","title","notes","createdAt","undefined","updatedAt","saving","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,YAAP;;IAEqBC,a;;;;;AACjB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,UAanBC,WAbmB,GAaL,UAACC,CAAD,EAAO;AAAA,UACTC,MADS,GACE,MAAKC,KADP,CACTD,MADS;;AAGjB,YAAKE,QAAL,CAAc;AACVF,QAAAA,MAAM,oBAAOA,MAAP,sBAAgBD,CAAC,CAACI,MAAF,CAASC,IAAzB,EAAgCL,CAAC,CAACI,MAAF,CAASE,KAAzC;AADI,OAAd;AAGH,KAnBkB;;AAAA,UAqBnBC,UArBmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAqBN,iBAAMP,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,CAAC,CAACQ,cAAF;AADS;AAAA,uBAGQ,MAAKV,KAAL,CAAWW,MAAX,CAAkB,MAAKP,KAAL,CAAWD,MAA7B,CAHR;;AAAA;AAGHS,gBAAAA,EAHG;;AAIT,sBAAKZ,KAAL,CAAWa,OAAX,CAAmBC,OAAnB,oBAAuCF,EAAvC;;AAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArBM;;AAAA;AAAA;AAAA;AAAA;;AAEf,UAAKR,KAAL,GAAW;AACPD,MAAAA,MAAM,EAAC;AACHY,QAAAA,KAAK,EAAC,EADH;AAEHC,QAAAA,KAAK,EAAC,EAFH;AAGHC,QAAAA,SAAS,EAACC,SAHP;AAIHC,QAAAA,SAAS,EAACD;AAJP,OADA;AAOPE,MAAAA,MAAM,EAAE;AAPD,KAAX;AAFe;AAWlB;;;;6BAiBQ;AAAA,UACGjB,MADH,GACc,KAAKC,KADnB,CACGD,MADH;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAM,QAAA,QAAQ,EAAE,KAAKM,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAEN,MAAM,CAACY,KAA9C;AAAqD,QAAA,QAAQ,EAAE,KAAKd,WAApE;AAAiF,QAAA,SAAS,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,EAAE,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CALJ,CAFJ,CADJ;AAeH;;;;EA9CsCJ,KAAK,CAACwB,S;;SAA5BtB,a","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './form.css'\n\nexport default class NewFolderPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            folder:{\n                title:'',\n                notes:[],\n                createdAt:undefined,\n                updatedAt:undefined\n            },\n            saving: false\n        }\n    }\n\n    updateValue = (e) => {\n        const { folder } = this.state;\n\n        this.setState({\n            folder: { ...folder, [e.target.name]: e.target.value}\n        });\n    }\n\n    handleSave = async(e) => {\n        e.preventDefault();\n\n        const id = await this.props.onSave(this.state.folder);\n        this.props.history.replace(`/folders/${id}`);\n    }\n\n    render() {\n        const { folder } = this.state;\n        return(\n            <div className=\"note-form\">\n                <h1>New Folder</h1>\n                <form onSubmit={this.handleSave}>\n                    <div className=\"note-form-field\">\n                        <label>Folder Name</label>\n                        <input type=\"text\" name=\"title\" value={folder.title} onChange={this.updateValue} autoFocus/>\n                    </div>\n                    <div className=\"note-form-buttons\">\n                        <button className=\"btn\">Save</button>\n                        <Link to={`/`}>Cancel</Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}