{"ast":null,"code":"import _regeneratorRuntime from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Navbar from './components/navbar';\nimport IndexPage from './pages';\nimport ShowPage from './pages/show';\nimport NewPage from './pages/new';\nimport EditPage from './pages/edit';\nimport DB from './db';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      db: new DB(),\n      notes: {},\n      loading: true\n    };\n\n    _this.handleSave =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(note, method) {\n        var res, notes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.state.db[method](note);\n\n              case 2:\n                res = _context.sent;\n                notes = _this.state.notes;\n                note._id = res.id;\n                note._rev = res.rev; // const { notes } = this.state;\n\n                _this.setState({\n                  notes: _objectSpread({}, notes, _defineProperty({}, res.id, note))\n                });\n\n                return _context.abrupt(\"return\", res);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var db = new DB();\n    _this.state = {\n      db: db,\n      notes: {},\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var notes;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.state.db.getAllNotes();\n\n              case 2:\n                notes = _context2.sent;\n                this.setState({\n                  notes: notes,\n                  loading: false\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"app-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: function component(props) {\n          return React.createElement(IndexPage, Object.assign({}, props, {\n            notes: _this2.state.notes,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/notes/:id\",\n        component: function component(props) {\n          return React.createElement(ShowPage, Object.assign({}, props, {\n            note: _this2.state.notes[props.match.params.id],\n            onDelete: function onDelete(id) {\n              return _this2.handleDelete(id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/notes/:id/edit\",\n        component: function component(props) {\n          return React.createElement(EditPage, Object.assign({}, props, {\n            note: _this2.state.notes[props.match.params.id],\n            onSave: function onSave(note) {\n              return _this2.handleSave(note, 'updateNote');\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/new\",\n        component: function component(props) {\n          return React.createElement(NewPage, Object.assign({}, props, {\n            onSave: function onSave(note) {\n              return _this2.handleSave(note, 'createNote');\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), this.renderContent()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/App.js"],"names":["React","Component","BrowserRouter","Route","Navbar","IndexPage","ShowPage","NewPage","EditPage","DB","App","props","state","db","notes","loading","handleSave","note","method","res","_id","id","_rev","rev","setState","getAllNotes","match","params","handleDelete","renderContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Navbar from './components/navbar';\n\nimport IndexPage from './pages';\nimport ShowPage from './pages/show';\nimport NewPage from './pages/new';\nimport EditPage from './pages/edit';\n\nimport DB from './db';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let db = new DB();\n    this.state={\n      db,\n      notes: {},\n      loading: true\n    }\n  }\n  state = {\n    db: new DB(),\n    notes: {},\n    loading: true\n  }\n\n  async componentDidMount() {\n    const notes = await this.state.db.getAllNotes();\n\n    this.setState({\n      notes,\n      loading: false\n    })\n  }\n\n  handleSave = async (note, method) => {\n    let res = await this.state.db[method](note);\n    let { notes } = this.state;\n\n    note._id = res.id;\n    note._rev = res.rev;\n\n    // const { notes } = this.state;\n\n    this.setState({\n      notes: { ...notes, [res.id]: note }\n    });\n\n    return res;\n  }\n\n  renderContent() {\n    if(this.state.loading) {\n      return <h2>Loading...</h2>\n    }\n\n    return (\n      <div className=\"app-content\">\n        <Route exact path='/' component={(props) => <IndexPage {...props} notes={this.state.notes} />} />\n        <Route exact path='/notes/:id' component={(props) => (\n          <ShowPage {...props} note={this.state.notes[props.match.params.id]} onDelete={(id) => this.handleDelete(id) } />\n        )} />\n        <Route exact path='/notes/:id/edit' component={(props) => (\n          <EditPage {...props} note={this.state.notes[props.match.params.id]} onSave={(note) => this.handleSave(note, 'updateNote') } />\n        )} />\n        <Route exact path='/new' component={(props) => (\n          <NewPage {...props} onSave={(note) => this.handleSave(note, 'createNote')} />\n        )} />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          { this.renderContent() }\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}