{"ast":null,"code":"import _regeneratorRuntime from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/new.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { Link } from 'react-router-dom';\nimport RichTextEditor from 'react-rte';\nimport ReactQuill from 'react-quill';\nimport './form.css';\nimport 'react-quill/dist/quill.snow.css';\nimport { notDeepEqual } from 'assert';\n\nvar NewPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPage, _Component);\n\n  function NewPage(props) {\n    var _this;\n\n    _classCallCheck(this, NewPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPage).call(this, props));\n\n    _this.onChange = function (value) {\n      _this.setState({\n        value: value\n      });\n\n      if (_this.props.onChange) {\n        // Send the changes up to the parent component as an HTML string.\n        // This is here to demonstrate using `.toString()` but in a real app it\n        // would be better to avoid generating a string on each change.\n        _this.props.onChange(value.toString('html'));\n      }\n    };\n\n    _this.updateValue = function (e) {\n      var note = _this.state.note;\n\n      _this.setState({\n        note: _objectSpread({}, note, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleSave =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return _this.props.onSave(_this.state.note);\n\n              case 3:\n                id = _context.sent;\n\n                _this.props.history.replace(\"/notes/\".concat(id));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      value: RichTextEditor.createEmptyValue(),\n      note: {\n        title: '',\n        body: '',\n        createdAt: undefined,\n        updatedAt: undefined\n      },\n      saving: false // this.handleChange = this.handleChange.bind(this);\n\n    };\n    return _this;\n  } // handleChange(value) {\n  //     console.log(\"changed text area to \", value)\n  //     this.setState({ text:value })\n  // }\n\n\n  _createClass(NewPage, [{\n    key: \"render\",\n    value: function render() {\n      var note = this.state.note;\n      return React.createElement(\"div\", {\n        className: \"note-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"New Note\"), React.createElement(\"form\", {\n        onSubmit: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"note-form-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: note.title,\n        onChange: this.updateValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"note-form-field note-form-field-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(RichTextEditor, {\n        value: note.body,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"note-form-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return NewPage;\n}(Component);\n\nNewPage.propTypes = {\n  onChange: PropTypes.func\n};\nexport { NewPage as default };","map":{"version":3,"sources":["/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/new.js"],"names":["React","Component","PropTypes","Link","RichTextEditor","ReactQuill","notDeepEqual","NewPage","props","onChange","value","setState","toString","updateValue","e","note","state","target","name","handleSave","preventDefault","onSave","id","history","replace","createEmptyValue","title","body","createdAt","undefined","updatedAt","saving","propTypes","func"],"mappings":"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","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RichTextEditor from 'react-rte';\nimport ReactQuill from 'react-quill';\n\nimport './form.css'\nimport 'react-quill/dist/quill.snow.css';\nimport { notDeepEqual } from 'assert';\n\nexport default class NewPage extends Component {\n    static propTypes = {\n        onChange: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state={\n            value: RichTextEditor.createEmptyValue(),\n            note: {\n                title:'',\n                body:'',\n                createdAt:undefined,\n                updatedAt:undefined\n            },\n            saving: false\n        }\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    // handleChange(value) {\n    //     console.log(\"changed text area to \", value)\n    //     this.setState({ text:value })\n    // }\n\n    onChange = (value) => {\n        this.setState({value});\n        if (this.props.onChange) {\n          // Send the changes up to the parent component as an HTML string.\n          // This is here to demonstrate using `.toString()` but in a real app it\n          // would be better to avoid generating a string on each change.\n          this.props.onChange(\n            value.toString('html')\n          );\n        }\n      };\n\n    updateValue = (e) => {\n        const { note } = this.state;\n        this.setState({\n            note: { ...note, [e.target.name]: e.target.value}\n        });\n    }\n\n    handleSave = async(e) => {\n        e.preventDefault();\n\n        const id = await this.props.onSave(this.state.note);\n        this.props.history.replace(`/notes/${id}`);\n    }\n\n    render(){\n        const { note } = this.state;\n\n        return (\n            <div className=\"note-form\">\n                <h1>New Note</h1>\n                <form onSubmit={this.handleSave}>\n                    <div className=\"note-form-field\">\n                        <label>Title</label>\n                        <input type=\"text\" name=\"title\" value={note.title} onChange={this.updateValue} />\n                    </div>\n                    <div className=\"note-form-field note-form-field-text\">\n                        {/* <textarea name=\"body\" value={note.body} onChange={this.updateValue}/> */}\n                        {/* <ReactQuill theme=\"snow\" value={note.body} onChange={this.handleChange} /> */}\n                        <RichTextEditor value={note.body} onChange={this.onChange} />\n                    </div>\n                    <div className=\"note-form-buttons\">\n                        <button className=\"btn\">Save</button>\n                        <Link to={`/`}>Cancel</Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}