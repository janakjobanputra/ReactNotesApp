{"ast":null,"code":"import _toConsumableArray from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/new.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport ReactQuill from 'react-quill';\nimport './form.css';\nimport 'react-quill/dist/quill.snow.css';\n\nvar NewPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewPage, _React$Component);\n\n  function NewPage(props) {\n    var _this;\n\n    _classCallCheck(this, NewPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPage).call(this, props));\n\n    _this.updateValue = function (e) {\n      var note = _this.state.note;\n\n      _this.setState({\n        note: _objectSpread({}, note, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleSave =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return _this.props.onSave(_this.state.note);\n\n              case 3:\n                id = _context.sent;\n\n                _this.props.history.replace(\"/notes/\".concat(id));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      tags: [{\n        id: \"Thailand\",\n        text: \"Thailand\"\n      }, {\n        id: \"India\",\n        text: \"India\"\n      }],\n      note: {\n        title: '',\n        body: '',\n        createdAt: undefined,\n        updatedAt: undefined\n      },\n      saving: false //React Quill Linking\n\n    };\n    _this.handleBodyChange = _this.handleBodyChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); //React Tags Linking\n\n    _this.handleDeleteTag = _this.handleDeleteTag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAdditionTag = _this.handleAdditionTag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDragTag = _this.handleDragTag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewPage, [{\n    key: \"handleBodyChange\",\n    value: function handleBodyChange(value) {\n      var note = this.state.note;\n      this.setState({\n        note: _objectSpread({}, note, {\n          body: value\n        })\n      });\n    }\n  }, {\n    key: \"handleDeleteTag\",\n    value: function handleDeleteTag(i) {\n      var tags = this.state.tags;\n      this.setState({\n        tags: tags.filter(function (tag, index) {\n          return index !== i;\n        })\n      });\n    }\n  }, {\n    key: \"handleAdditionTag\",\n    value: function handleAdditionTag(tag) {\n      this.setState(function (state) {\n        return {\n          tags: _toConsumableArray(state.tags).concat([tag])\n        };\n      });\n    }\n  }, {\n    key: \"handleDragTag\",\n    value: function handleDragTag(tag, currPos, newPos) {\n      var tags = _toConsumableArray(this.state.tags);\n\n      var newTags = tags.slice();\n      newTags.splice(currPos, 1);\n      newTags.splice(newPos, 0, tag); // re-render\n\n      this.setState({\n        tags: newTags\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var note = this.state.note;\n      var tags = this.state.tags;\n      var reactQuillStyles = {\n        height: '95%',\n        width: '100%',\n        padding: '10px'\n      };\n      var modules = {\n        toolbar: [[{\n          'header': [1, 2, false]\n        }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n          'list': 'ordered'\n        }, {\n          'list': 'bullet'\n        }, {\n          'indent': '-1'\n        }, {\n          'indent': '+1'\n        }], ['link', 'image'], ['clean']]\n      };\n      var formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\n      return React.createElement(\"div\", {\n        className: \"note-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"New Note\"), React.createElement(\"form\", {\n        onSubmit: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"note-form-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: note.title,\n        onChange: this.updateValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(ReactTags, {\n        tags: tags,\n        handleDelete: this.handleDeleteTag,\n        handleAddition: this.handleAdditionTag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note-form-field note-form-field-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(ReactQuill, {\n        theme: \"snow\",\n        value: note.body,\n        onChange: this.handleBodyChange,\n        style: reactQuillStyles,\n        modules: modules,\n        formats: formats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"note-form-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return NewPage;\n}(React.Component);\n\nexport { NewPage as default };","map":{"version":3,"sources":["/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/new.js"],"names":["React","Link","ReactDOM","WithContext","ReactTags","ReactQuill","NewPage","props","updateValue","e","note","state","setState","target","name","value","handleSave","preventDefault","onSave","id","history","replace","tags","text","title","body","createdAt","undefined","updatedAt","saving","handleBodyChange","bind","handleDeleteTag","handleAdditionTag","handleDragTag","i","filter","tag","index","currPos","newPos","newTags","slice","splice","reactQuillStyles","height","width","padding","modules","toolbar","formats","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport ReactQuill from 'react-quill';\n\nimport './form.css'\nimport 'react-quill/dist/quill.snow.css';\n\nexport default class NewPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            tags:[\n                { id: \"Thailand\", text: \"Thailand\" },\n                { id: \"India\", text: \"India\" }\n            ],\n            note: {\n                title:'',\n                body:'',\n                createdAt:undefined,\n                updatedAt:undefined\n            },\n            saving: false\n        }\n        //React Quill Linking\n        this.handleBodyChange = this.handleBodyChange.bind(this);\n\n        //React Tags Linking\n        this.handleDeleteTag = this.handleDeleteTag.bind(this);\n        this.handleAdditionTag = this.handleAdditionTag.bind(this);\n        this.handleDragTag = this.handleDragTag.bind(this);\n    }\n    \n    handleBodyChange(value) {\n        const { note } = this.state;\n        this.setState({\n            note: { ...note, body: value}\n         })\n    }\n\n    handleDeleteTag(i) {\n        const { tags } = this.state;\n        this.setState({\n            tags: tags.filter((tag, index) => index !== i),\n        });\n    }\n\n    handleAdditionTag(tag) {\n        this.setState(state => ({ tags: [...state.tags, tag] }));\n    }\n\n    handleDragTag(tag, currPos, newPos) {\n        const tags = [...this.state.tags];\n        const newTags = tags.slice();\n \n        newTags.splice(currPos, 1);\n        newTags.splice(newPos, 0, tag);\n \n        // re-render\n        this.setState({ tags: newTags });\n    }\n\n    updateValue = (e) => {\n        const { note } = this.state;\n\n        this.setState({\n            note: { ...note, [e.target.name]: e.target.value}\n        });\n    }\n\n    handleSave = async(e) => {\n        e.preventDefault();\n\n        const id = await this.props.onSave(this.state.note);\n        this.props.history.replace(`/notes/${id}`);\n    }\n\n    render(){\n        const { note } = this.state;\n        const { tags } = this.state;\n        let reactQuillStyles = {\n            height:'95%',\n            width:'100%',\n            padding:'10px',\n        }\n        let modules = {\n            toolbar: [\n                [{ 'header': [1, 2, false] }],\n                ['bold', 'italic', 'underline','strike', 'blockquote'],\n                [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n                ['link', 'image'],\n                ['clean']\n            ],\n          }\n        let formats = [\n            'header',\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\n            'list', 'bullet', 'indent',\n            'link', 'image'\n        ]\n\n        return (\n            <div className=\"note-form\">\n                <h1>New Note</h1>\n                <form onSubmit={this.handleSave}>\n                    <div className=\"note-form-field\">\n                        <label>Title</label>\n                        <input type=\"text\" name=\"title\" value={note.title} onChange={this.updateValue} />\n                    </div>\n                    {/* <div className=\"note-form-field\"> */}\n                        <ReactTags tags={tags} handleDelete={this.handleDeleteTag} handleAddition={this.handleAdditionTag} />\n                    {/* </div> */}\n                    <div className=\"note-form-field note-form-field-text\">\n                        {/* <textarea name=\"body\" value={note.body} onChange={this.updateValue}/> */}\n                        <ReactQuill theme=\"snow\" value={note.body} onChange={this.handleBodyChange} style={reactQuillStyles} modules={modules}\n                    formats={formats}/>\n                    </div>\n                    <div className=\"note-form-buttons\">\n                        <button className=\"btn\">Save</button>\n                        <Link to={`/`}>Cancel</Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}