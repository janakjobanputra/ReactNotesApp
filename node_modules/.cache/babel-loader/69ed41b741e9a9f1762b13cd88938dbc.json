{"ast":null,"code":"import _defineProperty from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Navbar from './components/navbar';\nimport IndexPage from './pages';\nimport ShowPage from './pages/show';\nimport NewPage from './pages/new';\nimport EditPage from './pages/edit';\nimport SearchPage from './pages/search';\nimport NewFolderPage from './pages/newfolder';\nimport DB from './db';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    var db = new DB();\n    _this.state = {\n      db: db,\n      notes: {},\n      folders: {},\n      loading: true\n    };\n    _this.handleDeleteAll = _this.handleDeleteAll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var notes, folders;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.state.db.getAllNotes();\n\n              case 2:\n                notes = _context.sent;\n                _context.next = 5;\n                return this.state.db.getAllFolders();\n\n              case 5:\n                folders = _context.sent;\n                this.setState({\n                  notes: notes,\n                  loading: false\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleSave\",\n    value: function () {\n      var _handleSave = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(thing, method, isNote) {\n        var res, notes, folders;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (thing.title) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                console.log(\"returning, no title\");\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                console.log(\"saving thing\", thing, method);\n                _context2.next = 6;\n                return this.state.db[method](thing);\n\n              case 6:\n                res = _context2.sent;\n\n                if (isNote) {\n                  notes = this.state.notes;\n                  thing._id = res.id;\n                  thing._rev = res.rev;\n                  this.setState({\n                    notes: _objectSpread({}, notes, _defineProperty({}, res.id, thing))\n                  });\n                } else {\n                  folders = this.state.folders;\n                  thing._id = res.id;\n                  thing._rev = res.rev;\n                  console.log(\"res\", res, thing);\n                  this.setState({\n                    folders: _objectSpread({}, folders, _defineProperty({}, res.id, thing))\n                  });\n                }\n\n                return _context2.abrupt(\"return\", res);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSave(_x, _x2, _x3) {\n        return _handleSave.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleDelete\",\n    value: function () {\n      var _handleDelete = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var notes, note;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                notes = this.state.notes;\n                note = notes[id];\n\n                if (!(notes[id] && window.confirm('Are you sure you want to delete this note?'))) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 5;\n                return this.state.db.deleteNote(note);\n\n              case 5:\n                delete notes[id];\n                this.setState({\n                  notes: notes\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function handleDelete(_x4) {\n        return _handleDelete.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleDeleteAll\",\n    value: function () {\n      var _handleDeleteAll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var notes;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(\"deleting All\", this);\n                notes = this.state.notes;\n                _context4.next = 4;\n                return this.state.db.deleteAll();\n\n              case 4:\n                notes = {};\n                this.setState({\n                  notes: notes\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function handleDeleteAll() {\n        return _handleDeleteAll.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"app-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: function component(props) {\n          return React.createElement(IndexPage, Object.assign({}, props, {\n            notes: _this2.state.notes,\n            folders: _this2.state.folders,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/notes/:id\",\n        component: function component(props) {\n          return React.createElement(ShowPage, Object.assign({}, props, {\n            note: _this2.state.notes[props.match.params.id],\n            onDelete: function onDelete(id) {\n              return _this2.handleDelete(id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/notes/:id/edit\",\n        component: function component(props) {\n          return React.createElement(EditPage, Object.assign({}, props, {\n            note: _this2.state.notes[props.match.params.id],\n            onSave: function onSave(note) {\n              return _this2.handleSave(note, 'updateNote', true);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/new\",\n        component: function component(props) {\n          return React.createElement(NewPage, Object.assign({}, props, {\n            onSave: function onSave(note) {\n              return _this2.handleSave(note, 'createNote', true);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        component: function component(props) {\n          return React.createElement(SearchPage, Object.assign({}, props, {\n            notes: _this2.state.notes,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/newfolder\",\n        component: function component(props) {\n          return React.createElement(NewFolderPage, Object.assign({}, props, {\n            onSave: function onSave(folder) {\n              return _this2.handleSave(folder, 'createFolder', false);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        deleteAll: this.handleDeleteAll,\n        notes: this.state.notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), this.renderContent()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/App.js"],"names":["React","Component","BrowserRouter","Route","Navbar","IndexPage","ShowPage","NewPage","EditPage","SearchPage","NewFolderPage","DB","App","props","db","state","notes","folders","loading","handleDeleteAll","bind","getAllNotes","getAllFolders","setState","thing","method","isNote","title","console","log","res","_id","id","_rev","rev","note","window","confirm","deleteNote","deleteAll","match","params","handleDelete","handleSave","folder","renderContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Navbar from './components/navbar';\n\nimport IndexPage from './pages';\nimport ShowPage from './pages/show';\nimport NewPage from './pages/new';\nimport EditPage from './pages/edit';\nimport SearchPage from './pages/search';\nimport NewFolderPage from './pages/newfolder';\n\nimport DB from './db';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    let db = new DB();\n    this.state = { \n      db,\n      notes: {},\n      folders: {},\n      loading: true\n    };\n    this.handleDeleteAll = this.handleDeleteAll.bind(this)\n  }\n\n  async componentDidMount() {\n    const notes = await this.state.db.getAllNotes();\n    const folders = await this.state.db.getAllFolders();\n\n    this.setState({\n      notes,\n      loading: false\n    });\n  }\n\n  async handleSave(thing, method, isNote) {\n    if(!thing.title) {\n      console.log(\"returning, no title\");\n      return;\n    }\n\n    console.log(\"saving thing\", thing, method)\n\n    let res = await this.state.db[method](thing);\n    if(isNote) {\n      let { notes } = this.state;\n      thing._id = res.id;\n      thing._rev = res.rev;\n      this.setState({\n        notes: { ...notes, [res.id]: thing }\n      });\n    } else {\n      let { folders } = this.state;\n      thing._id = res.id;\n      thing._rev = res.rev;\n      console.log(\"res\", res, thing)\n      this.setState({\n        folders: { ...folders, [res.id]: thing }\n      });\n    }\n\n    return res;\n  }\n\n  async handleDelete(id) {\n    let { notes } = this.state;\n    let note = notes[id];\n\n    if(notes[id] && window.confirm('Are you sure you want to delete this note?')) {\n      await this.state.db.deleteNote(note);\n\n      delete notes[id];\n\n      this.setState({ notes });\n    }\n  }\n\n  async handleDeleteAll() {\n    console.log(\"deleting All\", this)\n    let { notes } = this.state;\n    await this.state.db.deleteAll();\n    notes = {};\n    this.setState({ notes });\n  }\n\n  renderContent() {\n    if(this.state.loading) {\n      return <h2>Loading...</h2>\n    }\n\n    return (\n      <div className=\"app-content\">\n        <Route exact path='/' component={(props) => (\n          <IndexPage {...props} notes={this.state.notes} folders={this.state.folders}/>\n        )} />\n        <Route exact path='/notes/:id' component={(props) => (\n          <ShowPage {...props} note={this.state.notes[props.match.params.id]} onDelete={(id) => this.handleDelete(id) } />\n        )} />\n        <Route exact path='/notes/:id/edit' component={(props) => (\n          <EditPage {...props} note={this.state.notes[props.match.params.id]} onSave={(note) => this.handleSave(note, 'updateNote', true) } />\n        )} />\n        <Route exact path='/new' component={(props) => (\n          <NewPage {...props} onSave={(note) => this.handleSave(note, 'createNote', true)} />\n        )} />\n        <Route exact path='/search' component={(props) => (\n          <SearchPage {...props} notes={this.state.notes} />\n        )} />\n        <Route exact path='/newfolder' component={(props) => (\n          <NewFolderPage {...props} onSave={(folder) => this.handleSave(folder, 'createFolder', false)} />\n        )} />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar deleteAll={this.handleDeleteAll} notes={this.state.notes} />\n            { this.renderContent() }\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}