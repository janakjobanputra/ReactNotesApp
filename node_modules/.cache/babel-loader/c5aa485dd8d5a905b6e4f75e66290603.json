{"ast":null,"code":"import _defineProperty from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/edit.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport ReactQuill from 'react-quill';\nimport './form.css';\nimport 'react-quill/dist/quill.snow.css';\n\nvar EditNotePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditNotePage, _React$Component);\n\n  function EditNotePage(props) {\n    var _this;\n\n    _classCallCheck(this, EditNotePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditNotePage).call(this, props));\n    _this.state = {\n      tags: [],\n      note: {\n        title: '',\n        body: '',\n        createdAt: null,\n        updatedAt: null,\n        tags: []\n      },\n      saving: false\n    };\n    _this.state.tags = _this.state.note.tags; //React Quill Linking\n\n    _this.handleBodyChange = _this.handleBodyChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); //React Tags Linking\n\n    _this.handleDeleteTag = _this.handleDeleteTag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAdditionTag = _this.handleAdditionTag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDragTag = _this.handleDragTag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditNotePage, [{\n    key: \"handleBodyChange\",\n    value: function handleBodyChange(value) {\n      var note = this.state.note;\n      this.setState({\n        note: _objectSpread({}, note, {\n          body: value\n        })\n      });\n    }\n  }, {\n    key: \"handleDeleteTag\",\n    value: function handleDeleteTag(i) {\n      var tags = this.state.tags;\n      var note = this.state.note;\n      this.setState({\n        tags: tags.filter(function (tag, index) {\n          return index !== i;\n        }),\n        note: _objectSpread({}, note, {\n          tags: tags.filter(function (tag, index) {\n            return index !== i;\n          })\n        })\n      });\n    }\n  }, {\n    key: \"handleAdditionTag\",\n    value: function handleAdditionTag(tag) {\n      var note = this.state.note;\n      var concatTags = this.state.tags;\n      note.tags.forEach(function (tag) {\n        concatTags.push(tag);\n      });\n      this.setState(function (state) {\n        return {\n          tags: [concatTags, tag],\n          note: _objectSpread({}, note, {\n            tags: [concatTags, tag]\n          })\n        };\n      });\n    }\n  }, {\n    key: \"handleDragTag\",\n    value: function handleDragTag(tag, currPos, newPos) {\n      var tags = _toConsumableArray(this.state.tags);\n\n      var newTags = tags.slice();\n      newTags.splice(currPos, 1);\n      newTags.splice(newPos, 0, tag); // re-render\n\n      this.setState({\n        tags: newTags\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  note: _objectSpread({}, this.props.note)\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleSave\",\n    value: function () {\n      var _handleSave = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setState({\n                  saving: true\n                });\n                _context2.next = 3;\n                return this.props.onSave(_objectSpread({}, this.state.note));\n\n              case 3:\n                res = _context2.sent;\n                this.props.history.replace(\"/notes/\".concat(res.id));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleSave() {\n        return _handleSave.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(e) {\n      var note = this.state.note;\n      console.log(\"note updated\", note);\n      this.setState({\n        note: _objectSpread({}, note, _defineProperty({}, e.target.name, e.target.value))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \" Loading... \");\n      }\n\n      var note = this.state.note;\n      var tags = this.state.tags;\n      var reactQuillStyles = {\n        height: '95%',\n        width: '100%',\n        padding: '10px'\n      };\n      var modules = {\n        toolbar: [[{\n          'header': [1, 2, false]\n        }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n          'list': 'ordered'\n        }, {\n          'list': 'bullet'\n        }, {\n          'indent': '-1'\n        }, {\n          'indent': '+1'\n        }], ['link', 'image'], ['clean']]\n      };\n      var formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\n      return React.createElement(\"div\", {\n        className: \"note-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" Edit Note \"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          e.preventDefault();\n\n          _this2.handleSave();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"note-form-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: note.title,\n        onChange: function onChange(e) {\n          return _this2.updateValue(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(ReactTags, {\n        tags: note.tags,\n        handleDelete: this.handleDeleteTag,\n        handleAddition: this.handleAdditionTag,\n        handleDrag: this.handleDragTag,\n        allowUnique: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"note-form-field note-form-field-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(ReactQuill, {\n        theme: \"snow\",\n        value: note.body,\n        onChange: this.handleBodyChange,\n        style: reactQuillStyles,\n        modules: modules,\n        formats: formats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"note-form-buttoms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/notes/\".concat(note.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return EditNotePage;\n}(React.Component);\n\nexport { EditNotePage as default };","map":{"version":3,"sources":["/Users/janakjobanputra/Documents/Git/ReactNotesApp/react-notes/src/pages/edit.js"],"names":["React","Link","ReactDOM","WithContext","ReactTags","ReactQuill","EditNotePage","props","state","tags","note","title","body","createdAt","updatedAt","saving","handleBodyChange","bind","handleDeleteTag","handleAdditionTag","handleDragTag","value","setState","i","filter","tag","index","concatTags","forEach","push","currPos","newPos","newTags","slice","splice","onSave","res","history","replace","id","e","console","log","target","name","loading","reactQuillStyles","height","width","padding","modules","toolbar","formats","preventDefault","handleSave","updateValue","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport ReactQuill from 'react-quill';\n\nimport './form.css'\nimport 'react-quill/dist/quill.snow.css';\n\nexport default class EditNotePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tags:[],\n            note: {\n                title: '',\n                body: '',\n                createdAt: null,\n                updatedAt: null,\n                tags:[]\n            },\n            saving: false\n        }\n        this.state.tags = this.state.note.tags\n        //React Quill Linking\n        this.handleBodyChange = this.handleBodyChange.bind(this);\n\n        //React Tags Linking\n        this.handleDeleteTag = this.handleDeleteTag.bind(this);\n        this.handleAdditionTag = this.handleAdditionTag.bind(this);\n        this.handleDragTag = this.handleDragTag.bind(this);\n    }\n    \n    handleBodyChange(value) {\n        const { note } = this.state;\n        this.setState({\n            note: { ...note, body: value}\n         })\n    }\n\n    handleDeleteTag(i) {\n        const { tags } = this.state;\n        const { note } = this.state;\n        this.setState({\n            tags: tags.filter((tag, index) => index !== i),\n            note: { ...note, tags: tags.filter((tag, index) => index !== i) }\n        });\n    }\n\n    handleAdditionTag(tag) {\n        const { note } = this.state;\n        var concatTags = this.state.tags\n        note.tags.forEach((tag) => {\n            concatTags.push(tag)\n        })\n        this.setState(\n            state => ({ \n                tags: [concatTags, tag], \n                note:{ ...note, tags:[concatTags, tag] } \n            })\n        );\n    }\n\n    handleDragTag(tag, currPos, newPos) {\n        const tags = [...this.state.tags];\n        const newTags = tags.slice();\n \n        newTags.splice(currPos, 1);\n        newTags.splice(newPos, 0, tag);\n \n        // re-render\n        this.setState({ tags: newTags });\n    }\n\n    async componentDidMount() {\n        this.setState({ note: {...this.props.note} });\n    }\n\n    async handleSave() {\n        this.setState({ saving: true});\n\n        const res = await this.props.onSave({ ...this.state.note });\n\n        this.props.history.replace(`/notes/${res.id}`)\n    }\n\n    updateValue(e) {\n        let { note } = this.state;\n        console.log(\"note updated\", note)\n        this.setState({ note: { ...note, [e.target.name]: e.target.value } });\n    }\n\n    render() {\n        if(this.state.loading) {\n            return <h2> Loading... </h2>\n        }\n\n        const { note } = this.state;\n        const { tags } = this.state;\n        let reactQuillStyles = {\n            height:'95%',\n            width:'100%',\n            padding:'10px',\n        }\n        let modules = {\n            toolbar: [\n                [{ 'header': [1, 2, false] }],\n                ['bold', 'italic', 'underline','strike', 'blockquote'],\n                [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n                ['link', 'image'],\n                ['clean']\n            ],\n          }\n        let formats = [\n            'header',\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\n            'list', 'bullet', 'indent',\n            'link', 'image'\n        ]\n\n        return (\n            <div className=\"note-form\">\n                <h1> Edit Note </h1>\n                <form onSubmit={(e) => { e.preventDefault(); this.handleSave(); }}>\n                    <div className=\"note-form-field\">\n                        <label>Title</label>\n                        <input type=\"text\" name=\"title\" value={note.title} onChange={(e) => this.updateValue(e)} />\n                    </div>\n                    <ReactTags tags={note.tags} handleDelete={this.handleDeleteTag} handleAddition={this.handleAdditionTag} handleDrag={this.handleDragTag} allowUnique={true}/>\n                    <div className=\"note-form-field note-form-field-text\">\n                        {/* <textarea name=\"body\" value={note.body} onChange={(e) => this.updateValue(e)} /> */}\n                        <ReactQuill theme=\"snow\" value={note.body} onChange={this.handleBodyChange} style={reactQuillStyles} modules={modules}\n                    formats={formats}/>\n                    </div>\n                    <div className=\"note-form-buttoms\">\n                        <input type=\"submit\" value=\"Save\" />\n                        <Link to={`/notes/${note.id}`}>Cancel</Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}